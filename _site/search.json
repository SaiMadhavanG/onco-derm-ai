[
  {
    "objectID": "todo.html",
    "href": "todo.html",
    "title": "Initialization",
    "section": "",
    "text": "Initialization\n\ncome up with a name\nkedro init\npre commit hooks\n\nlinting\ntesting\nquartodoc\n\ntesting - pytest, git pre commit hook\nauto documentation - quartodoc\n\n\n\nDocumentation\n\nproject card - sai\ndata card\nmodel card\nmlops card\n\n\n\nData Prep\n\nLoad data - kedro\nData versioning - kedro\nImage preprocessing - normalizing, tensorizing and resizing - torchvision - srini\nData augmentation - torchvision\n\nData quality - ?, greater expectation\nright to erasure, forgetting - kedro pipeline\n\n\n\n\nTraining\n\nModel training - Resnet - PyTorch\nModel versioning - mlflow\nModel eval - Sk classification report, k cross val\nhyperparameter tuning - optuna/sklearn search\nautomatic reports - quarto and plotting libs\nModel pruning - pytorch\nadversarial robustness - auto_lirpa\nright to erasure, model retraining - kedro pipeline\n\n\n\nInference\n\nexplainability - deel\nconfidence calibration - deel, ?\nOOD detection - ?\nConformal predictions - deel\n\n\n\nDeployment\n\nmodel containerization - mlflow, docker\nauto model deployment - github actions/cloud provider\ndeployment side eval\ndata drift\nauto retraining triggers\n\n\n\nLLM\n\nllm set up\nllm prompt config\nllm deployment\n\n\n\nFront End\n\nFrontend dashboard - react, bootstrap\nChatbot window"
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "OncoDerm AI",
    "section": "",
    "text": "Project Proposal\n\nExecutive Summary\nWe propose developing a machine learning-based skin cancer screening system utilizing dermatoscopic images. The system will assist medical professionals in preliminary skin lesion assessment while incorporating robust MLOps practices, responsible AI principles, and an interactive chatbot feature powered by a Large Language Model (LLM) for enhanced user engagement.\n\n\nProblem Statement\nSkin cancer diagnosis requires expert dermatological knowledge and careful image analysis. While machine learning can assist in this process, deploying such systems in clinical settings requires careful consideration of reliability, explainability, operational excellence, and ease of interaction for medical professionals.\n\n\nDataset\n\nSource: DermaMNIST (based on HAM10000)\nClasses: 7 distinct skin lesion categories:\n\nActinic keratoses and intraepithelial carcinoma (akiec)\nBasal cell carcinoma (bcc)\nBenign keratosis-like lesions (bkl)\nDermatofibroma (df)\nMelanoma (mel)\nMelanocytic nevi (nv)\nVascular lesions (vasc)\n\nCharacteristics:\n\n28x28 pixel dermatoscopic images\n10,015 training images\n1,268 validation images\n2,239 test images\n\nData Split: Predefined splits provided by MedMNIST\n\n\n\nTechnical Architecture\n\n1. Model Development\n\nBase Architecture:\n\nResNet-18 or MobileNetV2 (modified for 28x28 input)\nLightweight models for compatibility with small input size\n\nTraining Pipeline:\n\nData augmentation (rotation, flipping, color jittering)\nTransfer learning with ImageNet weights\nFine-tuning for small images\nCross-validation for robust performance estimation\n\n\n\n\n2. MLOps Infrastructure\n\nData Pipeline:\n\nData ingestion and preprocessing\nData versioning\nData quality checks\n\nExperiment Tracking:\n\nMLflow for model versioning and tracking\nHyperparameter optimization\nModel performance visualization\n\nCI/CD Pipeline:\n\nAutomated testing (unit, integration, model performance)\nAutomated model deployment\nAutomated documentation generation\n\nMonitoring:\n\nModel performance metrics\nData drift detection\nAutomatic retraining triggers\n\n\n\n\n3. Production Features\n\nModel Robustness & Reliability\n\nExplainability\nConfidence Calibration\nAdversarial Robustness\nOut-of-Distribution Detection\n\n\n\nChatbot Integration with LLM\n\nInteractive Chatbot: We will integrate a chatbot powered by an LLM to enable natural language interactions with users.\n\nFunctionality: The chatbot will provide explanations, clarifications, and further details about the model’s prediction, confidence score, and lesion category. Medical professionals can ask follow-up questions, discuss specific cases, and obtain interpretative guidance.\nImplementation: All model outputs (prediction, confidence score, and explainability results) will be passed as inputs to the LLM, enabling contextual and conversational responses based on real-time model data.\nBenefits: Allows users to interact in natural language, promoting accessibility and understanding, especially useful for non-technical users in clinical settings.\n\n\n\n\nClinical Integration\n\nInteractive Dashboard:\n\nReal-time inference results\nConfidence scores and explanations\nImage preprocessing and quality checks\nResolution handling and upscaling options\n\nConformal Predictions:\n\nSet-valued predictions with guaranteed coverage\nCalibrated confidence scores\n\n\n\n\nData Privacy & Compliance\n\nRight to Erasure:\n\nAutomated removal pipeline\n\n\n\n\n\n\nEvaluation Metrics\n\nTechnical Metrics\n\nModel accuracy\nPrecision, recall, F1-score per class\nInference latency\nData drift metrics\n\n\n\nClinical Metrics\n\nFalse positive/negative rates\nCalibration error\nOOD detection accuracy\nExplanation quality (user feedback from chatbot interactions)\n\n\n\n\nChallenges & Risks\n\nTechnical Risks:\n\nLimited resolution impact on performance\nModel bias\nSystem scalability\nIntegration challenges\n\nClinical Risks:\n\nOver-reliance on system\nMisinterpretation of results\nEdge case handling\nResolution limitations affecting diagnosis\n\n\n\n\nMitigation Strategies\n\nClear Disclaimer: System is for screening assistance only\nResolution Warning: Clear indication of image resolution limitations\nComprehensive Documentation: Usage guidelines and limitations\nRegular Updates: Continuous model improvement\nUser Training: Proper system usage and interpretation"
  },
  {
    "objectID": "docs/cards/index.html",
    "href": "docs/cards/index.html",
    "title": "Cards",
    "section": "",
    "text": "Cards are intended to serve as a document giving a high level overview of the system developed and deployed. It is meant to be a high level document and as details emerge, documents such Model Cards and Data Cards can be linked. Below are the cards relevant to the OncoDermAI project:\n\nProject Card\nData Card"
  },
  {
    "objectID": "reference/normalizing_images.html",
    "href": "reference/normalizing_images.html",
    "title": "normalizing_images",
    "section": "",
    "text": "normalizing_images(data)\nNormalize the pixel values of images in the given DataFrame.\nThis function takes a DataFrame containing image data and normalizes the pixel values by dividing each pixel value by 255.0. The normalized pixel values will be in the range [0, 1].\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndata\npd.DataFrame\nA DataFrame containing image data. The DataFrame must have a column named “image” where each entry is an image represented as a numerical array.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nA DataFrame with the same structure as the input, but with normalized image pixel values."
  },
  {
    "objectID": "reference/normalizing_images.html#parameters",
    "href": "reference/normalizing_images.html#parameters",
    "title": "normalizing_images",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\ndata\npd.DataFrame\nA DataFrame containing image data. The DataFrame must have a column named “image” where each entry is an image represented as a numerical array.\nrequired"
  },
  {
    "objectID": "reference/normalizing_images.html#returns",
    "href": "reference/normalizing_images.html#returns",
    "title": "normalizing_images",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\n\npd.DataFrame\nA DataFrame with the same structure as the input, but with normalized image pixel values."
  },
  {
    "objectID": "reference/tensoring_resizing.html",
    "href": "reference/tensoring_resizing.html",
    "title": "tensoring_resizing",
    "section": "",
    "text": "tensoring_resizing(data)\nApplies a series of transformations to the ‘image’ column of a pandas DataFrame.\nThe transformations include converting images to PIL format, resizing them to 28x28 pixels, and converting them to tensors. The transformed images are then permuted and converted back to numpy arrays.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndata\npd.DataFrame\nA pandas DataFrame containing an ‘image’ column with image data.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nThe input DataFrame with the ‘image’ column transformed."
  },
  {
    "objectID": "reference/tensoring_resizing.html#parameters",
    "href": "reference/tensoring_resizing.html#parameters",
    "title": "tensoring_resizing",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\ndata\npd.DataFrame\nA pandas DataFrame containing an ‘image’ column with image data.\nrequired"
  },
  {
    "objectID": "reference/tensoring_resizing.html#returns",
    "href": "reference/tensoring_resizing.html#returns",
    "title": "tensoring_resizing",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\n\npd.DataFrame\nThe input DataFrame with the ‘image’ column transformed."
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "API Reference",
    "section": "",
    "text": "Functions in the data_preprocessing pipeline\n\n\n\nnormalizing_images\nNormalize the pixel values of images in the given DataFrame.\n\n\ntensoring_resizing\nApplies a series of transformations to the ‘image’ column of a pandas DataFrame."
  },
  {
    "objectID": "reference/index.html#data_preprocessing",
    "href": "reference/index.html#data_preprocessing",
    "title": "API Reference",
    "section": "",
    "text": "Functions in the data_preprocessing pipeline\n\n\n\nnormalizing_images\nNormalize the pixel values of images in the given DataFrame.\n\n\ntensoring_resizing\nApplies a series of transformations to the ‘image’ column of a pandas DataFrame."
  },
  {
    "objectID": "docs/cards/project-card.html",
    "href": "docs/cards/project-card.html",
    "title": "Project Card",
    "section": "",
    "text": "Provide succinct background to the problem so that the reader can empathize with the problem.\nSkin cancer is a growing concern worldwide, and in rural India, the lack of accessible dermatological care creates significant barriers to early diagnosis and treatment. Many rural communities face a shortage of dermatologists, with patients often traveling long distances to receive specialized care. Without timely diagnosis, skin cancer cases may go undetected or be identified too late, impacting patient outcomes.\n\n\n\nWhat is the problem being solved?\nThe problem being solved is the lack of accessible, early skin cancer screening and diagnosis in rural India, where dermatologists and specialized medical resources are scarce. Patients in these regions often struggle to receive timely assessments, which can delay diagnosis and treatment of skin cancers and other serious skin conditions.\n\n\n\nWho it is for? Is that a _user or a beneficiary? What is the problem being solved? Who it is for?_\nOncoDerm AI is designed for healthcare providers in rural India who lack access to specialized dermatological support. The primary users of the system are non-specialist healthcare workers, such as general practitioners, nurses, and community health workers, who can utilize the tool to make preliminary skin cancer assessments. These healthcare workers rely on OncoDerm AI to screen patients for potential skin lesions, helping them identify high-risk cases that require further specialist care.\nThe beneficiaries of this project are the patients in these rural communities. By receiving timely and accessible screening, they gain a greater chance for early detection and treatment of skin cancer, which can improve outcomes and save lives.\n\n\n\nWhy it needs to be solved?\nThe need for OncoDerm AI arises from the critical gap in dermatological care in rural India, where access to early diagnosis and specialist support is limited. Skin cancer, when detected early, can often be treated successfully; however, without timely screening, cases may go undiagnosed until they reach advanced stages, significantly affecting patient outcomes and increasing healthcare costs.\nBy solving this problem, OncoDerm AI aims to improve early detection rates, support healthcare providers in delivering higher-quality care, and ultimately enhance health outcomes for underserved populations. This tool brings reliable, cost-effective diagnostic support to rural areas, where it’s most needed, helping to bridge the healthcare gap for vulnerable communities.\n\n\n\nHow does the solution look like? It is more of the experience, rather how it will be developed.\nOncoDerm AI is an AI-powered skin cancer screening tool designed to provide healthcare workers in rural India with the ability to assess skin lesions using dermatoscopic images. The product consists of the following key components:\n\nAI Model: The core of the system is a deep learning model trained on a large dataset of dermatoscopic images (DermaMNIST), capable of classifying skin lesions into one of seven categories, including melanoma, basal cell carcinoma, and benign conditions. The model outputs predictions along with confidence scores and explanations for each classification.\nInteractive Chatbot: To enhance user engagement and accessibility, OncoDerm AI features a chatbot powered by a Large Language Model (LLM). Healthcare workers can interact with the chatbot to ask follow-up questions, seek clarifications, and obtain detailed explanations of the model’s predictions. The chatbot will provide context, offer interpretive guidance, and help users understand the significance of the results in simple language, making it easier for non-specialist users to interpret complex AI outputs.\nInteractive Dashboard: The tool provides a user-friendly dashboard that displays real-time skin lesion assessments. The dashboard includes:\n\nPredictions with confidence scores\nExplanations of the model’s decision-making process\nImage preprocessing and quality checks\nOptions for resolution handling and upscaling to ensure clarity of images\n\nClinical Integration: OncoDerm AI can be integrated into the existing healthcare workflows in rural clinics, making it easy to use without the need for specialized equipment. Healthcare workers can upload dermatoscopic images via mobile devices or computers, receive immediate results, and engage in a conversation with the chatbot for further guidance.\nData Privacy & Compliance: OncoDerm AI ensures data privacy, featuring an automated data removal pipeline to handle the right to erasure requests from patients.\n\nThe experience for the user is seamless: after uploading a skin lesion image, the healthcare worker receives immediate feedback from the AI model along with an explanation of the diagnosis. If they need further clarification, they can interact with the chatbot to receive more detailed information, enhancing their understanding and confidence in the decision-making process.\nOncoDerm AI is designed to be easy to use, ensuring that healthcare providers in rural areas, with varying levels of technical expertise, can effectively use it to support early skin cancer detection.\n\n\n\nBreakdown the product into key (business) objectives that need to be delivered? SMART Goals is useful to frame\nThe OncoDerm AI project aims to deliver a comprehensive solution for skin cancer screening in rural India, where access to dermatologists is limited. Below are the key business objectives, framed as SMART goals:\n\nObjective 1: Achieve 85% Model Accuracy in Skin Lesion Classification\n\nSpecific: Develop and deploy an AI model that classifies skin lesions into 7 categories (including melanoma and basal cell carcinoma) with a minimum accuracy of 85%.\nMeasurable: Accuracy will be evaluated using the validation set (1,268 images) and tested on the test set (2,239 images).\nAchievable: Using a well-known architecture like ResNet-18 or MobileNetV2, and leveraging transfer learning and data augmentation.\nRelevant: High classification accuracy is critical to ensuring the system provides reliable results to healthcare workers.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 2: Integrate an Interactive Chatbot for Enhanced User Engagement\n\nSpecific: Integrate a chatbot powered by an LLM that allows users to interact with the system, asking for clarifications and receiving model predictions, confidence scores, and explanations.\nMeasurable: Measure user engagement through usage statistics, and collect feedback on chatbot helpfulness through user surveys.\nAchievable: Integrating a pre-trained LLM and providing a user-friendly interface for querying the model.\nRelevant: The chatbot will help medical professionals in rural areas, who may not have in-depth dermatological knowledge, interpret the model’s results more confidently.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 3: Ensure Data Privacy Compliance and Implement Right to Erasure\n\nSpecific: Implement a data pipeline that ensures patient data is securely handled, with a fully automated removal process for data erasure requests, in compliance with privacy laws and regulations.\nMeasurable: Successfully process at least 99% of data removal requests within 24 hours.\nAchievable: Design and implement an automated data removal pipeline that complies with local privacy standards.\nRelevant: Ensuring patient data privacy is crucial in gaining trust among users, particularly in rural settings where data sensitivity is a concern.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 5: Monitor System Performance and Retrain Model Every 3 Months\n\nSpecific: Implement a system for continuous monitoring of model performance and retrain the model every 3 months to ensure its accuracy and adapt to any changes in data (e.g., new skin lesion patterns).\nMeasurable: Measure model performance using metrics such as accuracy, precision, and recall, and retrain when performance degrades by more than 5%.\nAchievable: Set up continuous integration and delivery (CI/CD) pipelines to monitor performance and trigger retraining as needed.\nRelevant: Ensuring the model stays up-to-date and reliable is essential for maintaining trust and accuracy in the system.\nTime-bound: Implement continuous monitoring and retraining pipeline within 3 months of initial deployment, and retrain every 3 months thereafter.\n\n\n\n\n\nWhat are the challenges one can face and ways to overcome?\n\n\n\nDeveloping and deploying the OncoDerm AI system in rural India presents several challenges. Here are the key risks and potential mitigation strategies:\n\nLimited Image Resolution and Dataset Size\n\nChallenge: The DermaMNIST dataset contains 28x28 pixel images, which may limit the model’s ability to detect subtle visual features. Additionally, the dataset is relatively small, which can lead to overfitting.\nMitigation: Use transfer learning with pre-trained models on higher-resolution dermatoscopic images to improve feature extraction. Employ data augmentation techniques (e.g., rotation, flipping, color jittering) to create a more diverse dataset. Continuously update and expand the dataset by incorporating new data from partner clinics to improve model robustness.\n\nModel Interpretability and User Trust\n\nChallenge: Users in rural areas, often non-specialist healthcare workers, may lack the medical background to interpret complex AI outputs, which could lead to mistrust or misuse.\nMitigation: Provide clear, interpretable model outputs and confidence scores. Integrate the LLM-powered chatbot to provide accessible explanations, allowing users to ask questions and understand predictions better. Implement conformal predictions to communicate confidence in a way that’s easy to understand (e.g., “high confidence” vs. “low confidence”).\n\nTechnical Infrastructure Constraints in Rural Areas\n\nChallenge: Rural clinics may face limited access to high-speed internet, modern hardware, or reliable electricity, affecting system deployment and performance.\nMitigation: Optimize the model for low-resource environments by using lightweight architectures (e.g., MobileNetV2) and deploying the model on local devices with minimal computational requirements. Consider offline capabilities and integrate power backups if feasible.\n\nPrivacy and Data Security Concerns\n\nChallenge: Patient data privacy is crucial, particularly in sensitive areas like healthcare. Rural clinics may also have limited understanding of data privacy practices.\nMitigation: Implement data encryption, secure access controls, and compliance with local privacy laws. Develop training sessions for clinic staff on data privacy best practices. Set up an automated data removal pipeline to handle right-to-erasure requests efficiently, and regularly review compliance.\n\nModel Drift and Data Distribution Shifts\n\nChallenge: Skin lesion data may change over time due to environmental, genetic, or treatment factors, leading to model drift.\nMitigation: Implement continuous monitoring for data drift and set up a CI/CD pipeline to retrain the model as needed. Regularly assess model accuracy, and retrain every 3 months or when performance drops significantly. Collect user feedback and periodic clinical validation to ensure the model remains relevant.\n\nUser Adoption and Training\n\nChallenge: Local healthcare workers may be unfamiliar with AI systems, and mistrust or a lack of training may reduce adoption.\nMitigation: Collaborate with healthcare providers and NGOs to train healthcare workers on using the system effectively, including hands-on demonstrations and support materials in regional languages. Establish a support team for ongoing assistance, and offer a simplified user interface with a clear workflow to increase usability and confidence."
  },
  {
    "objectID": "docs/cards/project-card.html#background",
    "href": "docs/cards/project-card.html#background",
    "title": "Project Card",
    "section": "",
    "text": "Provide succinct background to the problem so that the reader can empathize with the problem.\nSkin cancer is a growing concern worldwide, and in rural India, the lack of accessible dermatological care creates significant barriers to early diagnosis and treatment. Many rural communities face a shortage of dermatologists, with patients often traveling long distances to receive specialized care. Without timely diagnosis, skin cancer cases may go undetected or be identified too late, impacting patient outcomes."
  },
  {
    "objectID": "docs/cards/project-card.html#problem",
    "href": "docs/cards/project-card.html#problem",
    "title": "Project Card",
    "section": "",
    "text": "What is the problem being solved?\nThe problem being solved is the lack of accessible, early skin cancer screening and diagnosis in rural India, where dermatologists and specialized medical resources are scarce. Patients in these regions often struggle to receive timely assessments, which can delay diagnosis and treatment of skin cancers and other serious skin conditions."
  },
  {
    "objectID": "docs/cards/project-card.html#customer",
    "href": "docs/cards/project-card.html#customer",
    "title": "Project Card",
    "section": "",
    "text": "Who it is for? Is that a _user or a beneficiary? What is the problem being solved? Who it is for?_\nOncoDerm AI is designed for healthcare providers in rural India who lack access to specialized dermatological support. The primary users of the system are non-specialist healthcare workers, such as general practitioners, nurses, and community health workers, who can utilize the tool to make preliminary skin cancer assessments. These healthcare workers rely on OncoDerm AI to screen patients for potential skin lesions, helping them identify high-risk cases that require further specialist care.\nThe beneficiaries of this project are the patients in these rural communities. By receiving timely and accessible screening, they gain a greater chance for early detection and treatment of skin cancer, which can improve outcomes and save lives."
  },
  {
    "objectID": "docs/cards/project-card.html#value-proposition",
    "href": "docs/cards/project-card.html#value-proposition",
    "title": "Project Card",
    "section": "",
    "text": "Why it needs to be solved?\nThe need for OncoDerm AI arises from the critical gap in dermatological care in rural India, where access to early diagnosis and specialist support is limited. Skin cancer, when detected early, can often be treated successfully; however, without timely screening, cases may go undiagnosed until they reach advanced stages, significantly affecting patient outcomes and increasing healthcare costs.\nBy solving this problem, OncoDerm AI aims to improve early detection rates, support healthcare providers in delivering higher-quality care, and ultimately enhance health outcomes for underserved populations. This tool brings reliable, cost-effective diagnostic support to rural areas, where it’s most needed, helping to bridge the healthcare gap for vulnerable communities."
  },
  {
    "objectID": "docs/cards/project-card.html#product",
    "href": "docs/cards/project-card.html#product",
    "title": "Project Card",
    "section": "",
    "text": "How does the solution look like? It is more of the experience, rather how it will be developed.\nOncoDerm AI is an AI-powered skin cancer screening tool designed to provide healthcare workers in rural India with the ability to assess skin lesions using dermatoscopic images. The product consists of the following key components:\n\nAI Model: The core of the system is a deep learning model trained on a large dataset of dermatoscopic images (DermaMNIST), capable of classifying skin lesions into one of seven categories, including melanoma, basal cell carcinoma, and benign conditions. The model outputs predictions along with confidence scores and explanations for each classification.\nInteractive Chatbot: To enhance user engagement and accessibility, OncoDerm AI features a chatbot powered by a Large Language Model (LLM). Healthcare workers can interact with the chatbot to ask follow-up questions, seek clarifications, and obtain detailed explanations of the model’s predictions. The chatbot will provide context, offer interpretive guidance, and help users understand the significance of the results in simple language, making it easier for non-specialist users to interpret complex AI outputs.\nInteractive Dashboard: The tool provides a user-friendly dashboard that displays real-time skin lesion assessments. The dashboard includes:\n\nPredictions with confidence scores\nExplanations of the model’s decision-making process\nImage preprocessing and quality checks\nOptions for resolution handling and upscaling to ensure clarity of images\n\nClinical Integration: OncoDerm AI can be integrated into the existing healthcare workflows in rural clinics, making it easy to use without the need for specialized equipment. Healthcare workers can upload dermatoscopic images via mobile devices or computers, receive immediate results, and engage in a conversation with the chatbot for further guidance.\nData Privacy & Compliance: OncoDerm AI ensures data privacy, featuring an automated data removal pipeline to handle the right to erasure requests from patients.\n\nThe experience for the user is seamless: after uploading a skin lesion image, the healthcare worker receives immediate feedback from the AI model along with an explanation of the diagnosis. If they need further clarification, they can interact with the chatbot to receive more detailed information, enhancing their understanding and confidence in the decision-making process.\nOncoDerm AI is designed to be easy to use, ensuring that healthcare providers in rural areas, with varying levels of technical expertise, can effectively use it to support early skin cancer detection."
  },
  {
    "objectID": "docs/cards/project-card.html#objectives",
    "href": "docs/cards/project-card.html#objectives",
    "title": "Project Card",
    "section": "",
    "text": "Breakdown the product into key (business) objectives that need to be delivered? SMART Goals is useful to frame\nThe OncoDerm AI project aims to deliver a comprehensive solution for skin cancer screening in rural India, where access to dermatologists is limited. Below are the key business objectives, framed as SMART goals:\n\nObjective 1: Achieve 85% Model Accuracy in Skin Lesion Classification\n\nSpecific: Develop and deploy an AI model that classifies skin lesions into 7 categories (including melanoma and basal cell carcinoma) with a minimum accuracy of 85%.\nMeasurable: Accuracy will be evaluated using the validation set (1,268 images) and tested on the test set (2,239 images).\nAchievable: Using a well-known architecture like ResNet-18 or MobileNetV2, and leveraging transfer learning and data augmentation.\nRelevant: High classification accuracy is critical to ensuring the system provides reliable results to healthcare workers.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 2: Integrate an Interactive Chatbot for Enhanced User Engagement\n\nSpecific: Integrate a chatbot powered by an LLM that allows users to interact with the system, asking for clarifications and receiving model predictions, confidence scores, and explanations.\nMeasurable: Measure user engagement through usage statistics, and collect feedback on chatbot helpfulness through user surveys.\nAchievable: Integrating a pre-trained LLM and providing a user-friendly interface for querying the model.\nRelevant: The chatbot will help medical professionals in rural areas, who may not have in-depth dermatological knowledge, interpret the model’s results more confidently.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 3: Ensure Data Privacy Compliance and Implement Right to Erasure\n\nSpecific: Implement a data pipeline that ensures patient data is securely handled, with a fully automated removal process for data erasure requests, in compliance with privacy laws and regulations.\nMeasurable: Successfully process at least 99% of data removal requests within 24 hours.\nAchievable: Design and implement an automated data removal pipeline that complies with local privacy standards.\nRelevant: Ensuring patient data privacy is crucial in gaining trust among users, particularly in rural settings where data sensitivity is a concern.\nTime-bound: Achieve this goal within end of semseter.\n\nObjective 5: Monitor System Performance and Retrain Model Every 3 Months\n\nSpecific: Implement a system for continuous monitoring of model performance and retrain the model every 3 months to ensure its accuracy and adapt to any changes in data (e.g., new skin lesion patterns).\nMeasurable: Measure model performance using metrics such as accuracy, precision, and recall, and retrain when performance degrades by more than 5%.\nAchievable: Set up continuous integration and delivery (CI/CD) pipelines to monitor performance and trigger retraining as needed.\nRelevant: Ensuring the model stays up-to-date and reliable is essential for maintaining trust and accuracy in the system.\nTime-bound: Implement continuous monitoring and retraining pipeline within 3 months of initial deployment, and retrain every 3 months thereafter."
  },
  {
    "objectID": "docs/cards/project-card.html#risks-challenges",
    "href": "docs/cards/project-card.html#risks-challenges",
    "title": "Project Card",
    "section": "",
    "text": "What are the challenges one can face and ways to overcome?"
  },
  {
    "objectID": "docs/cards/project-card.html#risks-challenges-1",
    "href": "docs/cards/project-card.html#risks-challenges-1",
    "title": "Project Card",
    "section": "",
    "text": "Developing and deploying the OncoDerm AI system in rural India presents several challenges. Here are the key risks and potential mitigation strategies:\n\nLimited Image Resolution and Dataset Size\n\nChallenge: The DermaMNIST dataset contains 28x28 pixel images, which may limit the model’s ability to detect subtle visual features. Additionally, the dataset is relatively small, which can lead to overfitting.\nMitigation: Use transfer learning with pre-trained models on higher-resolution dermatoscopic images to improve feature extraction. Employ data augmentation techniques (e.g., rotation, flipping, color jittering) to create a more diverse dataset. Continuously update and expand the dataset by incorporating new data from partner clinics to improve model robustness.\n\nModel Interpretability and User Trust\n\nChallenge: Users in rural areas, often non-specialist healthcare workers, may lack the medical background to interpret complex AI outputs, which could lead to mistrust or misuse.\nMitigation: Provide clear, interpretable model outputs and confidence scores. Integrate the LLM-powered chatbot to provide accessible explanations, allowing users to ask questions and understand predictions better. Implement conformal predictions to communicate confidence in a way that’s easy to understand (e.g., “high confidence” vs. “low confidence”).\n\nTechnical Infrastructure Constraints in Rural Areas\n\nChallenge: Rural clinics may face limited access to high-speed internet, modern hardware, or reliable electricity, affecting system deployment and performance.\nMitigation: Optimize the model for low-resource environments by using lightweight architectures (e.g., MobileNetV2) and deploying the model on local devices with minimal computational requirements. Consider offline capabilities and integrate power backups if feasible.\n\nPrivacy and Data Security Concerns\n\nChallenge: Patient data privacy is crucial, particularly in sensitive areas like healthcare. Rural clinics may also have limited understanding of data privacy practices.\nMitigation: Implement data encryption, secure access controls, and compliance with local privacy laws. Develop training sessions for clinic staff on data privacy best practices. Set up an automated data removal pipeline to handle right-to-erasure requests efficiently, and regularly review compliance.\n\nModel Drift and Data Distribution Shifts\n\nChallenge: Skin lesion data may change over time due to environmental, genetic, or treatment factors, leading to model drift.\nMitigation: Implement continuous monitoring for data drift and set up a CI/CD pipeline to retrain the model as needed. Regularly assess model accuracy, and retrain every 3 months or when performance drops significantly. Collect user feedback and periodic clinical validation to ensure the model remains relevant.\n\nUser Adoption and Training\n\nChallenge: Local healthcare workers may be unfamiliar with AI systems, and mistrust or a lack of training may reduce adoption.\nMitigation: Collaborate with healthcare providers and NGOs to train healthcare workers on using the system effectively, including hands-on demonstrations and support materials in regional languages. Establish a support team for ongoing assistance, and offer a simplified user interface with a clear workflow to increase usability and confidence."
  },
  {
    "objectID": "docs/cards/project-card.html#task",
    "href": "docs/cards/project-card.html#task",
    "title": "Project Card",
    "section": "Task",
    "text": "Task\nWhat type of prediction problem is this? Link Model Card when sufficient details become available (start small but early)\nThe prediction task for OncoDerm AI is a multi-class classification problem, where the model identifies one of seven distinct skin lesion types from dermatoscopic images. Using a labeled dataset (DermaMNIST), the model is trained to recognize each class based on visual features in low-resolution images (28x28 pixels), aiming to assist in preliminary diagnosis."
  },
  {
    "objectID": "docs/cards/project-card.html#metrics",
    "href": "docs/cards/project-card.html#metrics",
    "title": "Project Card",
    "section": "Metrics",
    "text": "Metrics\nHow will the solution be evaluated - What are the ML metrics? What are the business metrics? Link Model Card when sufficient details become available (start small but early)\n\nML Metrics\n\nAccuracy: Measures the model’s overall correctness in identifying the correct lesion category.\nPrecision, Recall, and F1-score (per class): Evaluates performance across each lesion type, ensuring balanced identification and minimizing false positives and false negatives, especially for critical classes like melanoma.\nOut-of-Distribution (OOD) Detection Accuracy: Measures the model’s ability to detect and flag cases it hasn’t been trained on, ensuring safer real-world application.\nInference Latency: Tracks the speed at which the model generates predictions to support smooth, real-time interactions in clinical settings.\n\n\n\nBusiness Metrics\n\nReduction in Referral Time: Measures time saved in identifying high-risk cases for further diagnosis, aiming to improve early detection rates.\nUser Engagement: Tracks interactions with the LLM-powered chatbot, measuring how often medical assistants use it for explanations, confidence clarification, and follow-up inquiries.\nFeedback from Rural Health Workers: Collect qualitative data on ease of use, clarity, and clinical effectiveness in providing primary assessments for skin lesions.\nSystem Usage Rate: Monitors adoption rates in rural clinics to ensure the model is accessible and practical for real-world needs."
  },
  {
    "objectID": "docs/cards/project-card.html#evaluation",
    "href": "docs/cards/project-card.html#evaluation",
    "title": "Project Card",
    "section": "Evaluation",
    "text": "Evaluation\nHow will the solution be evaluated (process)? Link Model Card when sufficient details become available (start small but early)\n\n1. Technical Evaluation\n\nOffline Testing:\n\nConduct rigorous testing on the DermaMNIST validation and test datasets to evaluate baseline accuracy, precision, recall, F1-score, and confidence calibration.\nPerform stress testing for out-of-distribution (OOD) detection using external images not present in the training data, ensuring the model can reliably flag unfamiliar or rare cases.\n\nHuman-in-the-Loop Validation:\n\nDermatologists will review a subset of model predictions, offering feedback on accuracy, confidence scores, and explanations provided by the chatbot, allowing for continuous refinement.\n\n\n\n\n2. Clinical Pilot Testing in Rural Clinics\n\nUser Acceptance Testing (UAT):\n\nDeploy the model in a few rural clinics to observe its usability, particularly with non-specialist health workers. Measure system usage, evaluate time savings in preliminary assessments, and record feedback on interpretability and clarity of results.\n\nReal-World Feedback Collection:\n\nIntegrate a feedback loop for rural health workers to share experiences using the chatbot, focusing on how well it assists in understanding and relaying predictions.\nAssess the reduction in referral time for high-risk cases, aiming to expedite diagnosis.\n\n\n\n\n3. Ongoing Monitoring\n\nContinuous Model Evaluation:\n\nTrack and log model performance metrics in real-time, including confidence scores, latency, and data drift, triggering automatic retraining if significant shifts are detected.\nCalibrate the chatbot’s responses based on feedback to ensure it effectively answers typical questions and addresses user needs."
  },
  {
    "objectID": "docs/cards/project-card.html#data",
    "href": "docs/cards/project-card.html#data",
    "title": "Project Card",
    "section": "Data",
    "text": "Data\nWhat type of data is needed? How will it be collected - for training and for continuous improvement? Link Data Cards when sufficient details become available (start small but early)\n\nData Requirements\n\nPrimary Data: Dermatoscopic images for training and validating the model.\n\nType: 28x28 pixel RGB images focused on different skin lesions.\nClasses: Seven distinct skin lesion types (e.g., melanoma, basal cell carcinoma).\n\nAuxiliary Data: Patient metadata (e.g., age, lesion location) may be incorporated if available to enhance prediction accuracy.\n\n\n\nData Collection\n\nTraining and Initial Evaluation:\n\nDataset: DermaMNIST (based on the HAM10000 dataset), which provides a comprehensive set of images from diverse patients.\nSplits: Predefined training, validation, and test splits will be used to ensure consistency and reliability in performance evaluation.\n\nContinuous Improvement:\n\nUser-Generated Data: Images from new cases in rural clinics can be anonymized and added to expand and adapt the model to real-world conditions.\nFeedback Loop: Health workers’ and dermatologists’ feedback on chatbot interactions, predictions, and flagged OOD cases can further refine the system."
  },
  {
    "objectID": "docs/cards/project-card.html#continuous-improvement",
    "href": "docs/cards/project-card.html#continuous-improvement",
    "title": "Project Card",
    "section": "Continuous Improvement",
    "text": "Continuous Improvement\nHow will the system/model will improve? Provide a plan and means.\n\nUser Feedback Loop:\n\nChatbot Interactions: Track and analyze questions and responses from users (e.g., health workers or clinicians) to understand common inquiries, misconceptions, and desired information. This feedback will guide adjustments to the LLM’s responses and overall user experience.\nPrediction Accuracy: Collect feedback on predictions and confidence levels to assess areas of the model that need recalibration or fine-tuning, especially in cases that are challenging or prone to misclassification.\n\nData Collection and Expansion:\n\nCase Database Expansion: Gather additional dermatoscopic images from new rural cases, focusing on underrepresented lesion types or skin tones, to enhance model generalization.\nOut-of-Distribution (OOD) Tracking: Continuously monitor for OOD cases flagged by the model, then investigate and potentially incorporate these cases into training to improve robustness.\n\nScheduled Model Re-Training:\n\nAutomated Retraining Triggers: Implement retraining based on key metrics such as data drift, calibration error, and user feedback patterns to ensure that the model remains up-to-date with the latest data.\nData Augmentation: Periodically apply advanced data augmentation techniques (e.g., rotation, color adjustments) to create a more diverse and robust training dataset.\n\nModel Evaluation and Metrics Review:\n\nRegular Performance Audits: Conduct periodic evaluations to check model performance on critical metrics such as accuracy, false positive/negative rates, and OOD detection accuracy. Adjust hyperparameters and model architecture if necessary to address any consistent performance gaps.\nCalibration Checks: Regularly verify confidence scores to ensure accurate and reliable results, minimizing the risk of overconfidence in predictions."
  },
  {
    "objectID": "docs/cards/data-card.html",
    "href": "docs/cards/data-card.html",
    "title": "DermaMNIST Dataset Card",
    "section": "",
    "text": "Using downloaded and verified file: /home/saimadhavang/.medmnist/dermamnist.npz"
  },
  {
    "objectID": "docs/cards/data-card.html#purpose-of-collection",
    "href": "docs/cards/data-card.html#purpose-of-collection",
    "title": "DermaMNIST Dataset Card",
    "section": "Purpose of Collection",
    "text": "Purpose of Collection\nThe DermaMNIST dataset is collected to aid in the development and evaluation of machine learning models for skin lesion classification. Its primary application is in dermatological research and clinical diagnostics."
  },
  {
    "objectID": "docs/cards/data-card.html#collection-timeline",
    "href": "docs/cards/data-card.html#collection-timeline",
    "title": "DermaMNIST Dataset Card",
    "section": "Collection Timeline",
    "text": "Collection Timeline\n\nCollection Period: 2020 (part of the MedMNIST collection)\nVersion: 2.1.0"
  },
  {
    "objectID": "docs/cards/data-card.html#data-collectors-and-stakeholders",
    "href": "docs/cards/data-card.html#data-collectors-and-stakeholders",
    "title": "DermaMNIST Dataset Card",
    "section": "Data Collectors and Stakeholders",
    "text": "Data Collectors and Stakeholders\n\nPrincipal Investigators: Jiancheng Yang, et al.\nInstitution: Shanghai Jiao Tong University\nRepository: MedMNIST (GitHub: medmnist/medmnist)\nMaintainer: MedMNIST team"
  },
  {
    "objectID": "docs/cards/data-card.html#dataset-overview",
    "href": "docs/cards/data-card.html#dataset-overview",
    "title": "DermaMNIST Dataset Card",
    "section": "Dataset Overview",
    "text": "Dataset Overview\n\nFormat: .npz (NumPy compressed)\nData Type: Image-based (RGB, 28x28 resolution)\nStorage Requirements: Approx. 13 MB"
  },
  {
    "objectID": "docs/cards/data-card.html#sensitive-data-assessment",
    "href": "docs/cards/data-card.html#sensitive-data-assessment",
    "title": "DermaMNIST Dataset Card",
    "section": "Sensitive Data Assessment",
    "text": "Sensitive Data Assessment\nThe dataset contains de-identified medical images of skin lesions. While there is no personal health information (PHI), users are advised to follow ethical guidelines for medical data usage."
  },
  {
    "objectID": "docs/cards/data-card.html#recommended-applications",
    "href": "docs/cards/data-card.html#recommended-applications",
    "title": "DermaMNIST Dataset Card",
    "section": "Recommended Applications",
    "text": "Recommended Applications\n\nImage Classification Models: For lesion detection and diagnosis.\nBenchmarking: A standard benchmark for medical imaging tasks.\nEducational Use: Ideal for teaching machine learning in medical contexts."
  },
  {
    "objectID": "docs/cards/data-card.html#known-limitations",
    "href": "docs/cards/data-card.html#known-limitations",
    "title": "DermaMNIST Dataset Card",
    "section": "Known Limitations",
    "text": "Known Limitations\n\nLimited to 28x28 resolution, which may constrain advanced model performance."
  },
  {
    "objectID": "notebooks/DermaMnist.html",
    "href": "notebooks/DermaMnist.html",
    "title": "Importing data from medmnist",
    "section": "",
    "text": "To configure the data catalog, run the below cells. These cells will download the data from the medmnist dataset and save it in the data directory as a dataframe encapsuled in a pickle file.\n\n# !pip install medmnist\n\n\nfrom medmnist import DermaMNIST\n\n\ndata_train = DermaMNIST(split=\"train\", download=True, root=\"../data/01_raw/\")\n\nDownloading https://zenodo.org/records/10519652/files/dermamnist.npz?download=1 to ../data/01_raw/dermamnist.npz\n\n\n100%|██████████| 19.7M/19.7M [00:52&lt;00:00, 379kB/s] \n\n\n\nimport numpy as np\n\nds = np.load(\"../data/01_raw/dermamnist.npz\")\n\n\ntrain_images = ds[\"train_images\"]\ntrain_labels = ds[\"train_labels\"]\nval_images = ds[\"val_images\"]\nval_labels = ds[\"val_labels\"]\ntest_images = ds[\"test_images\"]\ntest_labels = ds[\"test_labels\"]\n\n\ntrain_len = len(train_images)\nval_len = len(val_images)\ntest_len = len(test_images)\n\n\n# generate ids array\ntrain_ids = [f\"train_{i}\" for i in range(train_len)]\nval_ids = [f\"val_{i}\" for i in range(val_len)]\ntest_ids = [f\"test_{i}\" for i in range(test_len)]\n\n\ntrain_images = list(train_images)\nval_images = list(val_images)\ntest_images = list(test_images)\n\n\ntrain_labels = list(train_labels)\nval_labels = list(val_labels)\ntest_labels = list(test_labels)\n\n\n# construct a df for each of the splits\nimport pandas as pd\n\ntrain_df = pd.DataFrame(\n    {\n        \"id\": train_ids,\n        \"image\": train_images,\n        \"label\": train_labels,\n    }\n)\ntest_df = pd.DataFrame(\n    {\n        \"id\": test_ids,\n        \"image\": test_images,\n        \"label\": test_labels,\n    }\n)\nval_df = pd.DataFrame(\n    {\n        \"id\": val_ids,\n        \"image\": val_images,\n        \"label\": val_labels,\n    }\n)\n\n\ntrain_df.to_pickle(\"../data/01_raw/train.pkl\")\ntest_df.to_pickle(\"../data/01_raw/test.pkl\")\nval_df.to_pickle(\"../data/01_raw/val.pkl\")\n\n\ntrain_df_loaded = pd.read_pickle(\"../data/01_raw/train.pkl\")\n\n\ntrain_df_loaded[\"image\"].iloc[0].shape\n\n(28, 28, 3)\n\n\n\ndef normalizing_images(data: pd.DataFrame) -&gt; pd.DataFrame:\n    data[\"image\"] = data[\"image\"].apply(lambda x: x / 255.0)\n    return data\n\n\ntrain_df_loaded_new = normalizing_images(train_df_loaded)\ntrain_df_loaded_new\n\n\n\n\n\n\n\n\nid\nimage\nlabel\n\n\n\n\n0\ntrain_0\n[[[0.002429834678969627, 0.001707035755478662,...\n[0]\n\n\n1\ntrain_1\n[[[0.003537101114955786, 0.001707035755478662,...\n[5]\n\n\n2\ntrain_2\n[[[0.003521722414455979, 0.002399077277970012,...\n[5]\n\n\n3\ntrain_3\n[[[0.003506343713956171, 0.0019530949634755863...\n[5]\n\n\n4\ntrain_4\n[[[0.0033217993079584776, 0.002891195693963860...\n[4]\n\n\n...\n...\n...\n...\n\n\n7002\ntrain_7002\n[[[0.0030911188004613607, 0.001953094963475586...\n[5]\n\n\n7003\ntrain_7003\n[[[0.003506343713956171, 0.0018762014609765476...\n[5]\n\n\n7004\ntrain_7004\n[[[0.00030757400999615535, 0.00027681660899653...\n[2]\n\n\n7005\ntrain_7005\n[[[0.002629757785467128, 0.002168396770472895,...\n[5]\n\n\n7006\ntrain_7006\n[[[0.003675509419454056, 0.002399077277970012,...\n[5]\n\n\n\n\n7007 rows × 3 columns\n\n\n\n\nfrom torchvision import transforms\n\n\ndef tensoring_resizing(data: pd.DataFrame) -&gt; pd.DataFrame:\n    transform = transforms.Compose(\n        [transforms.ToPILImage(), transforms.Resize((28, 28)), transforms.ToTensor()]\n    )\n\n    data[\"image\"] = data[\"image\"].apply(lambda x: transform(x).permute(1, 2, 0).numpy())\n    return data\n\n\ntrain_df_loaded_new = tensoring_resizing(train_df_loaded_new)\ntrain_df_loaded_new[\"image\"].iloc[0].shape\n\n(28, 28, 3)\n\n\n\n%load_ext kedro.ipython\n\n[11/05/24 23:08:04] INFO     Registered line magic '%reload_kedro'                                   __init__.py:61\n\n\n\n                    INFO     Registered line magic '%load_node'                                      __init__.py:63\n\n\n\n                    INFO     Resolved project path as: /home/saimadhavang/sem7/mlpe/onco-derm-ai.   __init__.py:178\n                             To set a different path, run '%reload_kedro &lt;project_root&gt;'                           \n\n\n\n                    INFO     Kedro is sending anonymous usage data with the sole purpose of improving plugin.py:233\n                             the product. No personal data or IP addresses are stored on our side. If              \n                             you want to opt out, set the `KEDRO_DISABLE_TELEMETRY` or `DO_NOT_TRACK`              \n                             environment variables, or create a `.telemetry` file in the current                   \n                             working directory with the contents `consent: false`. Read more at                    \n                             https://docs.kedro.org/en/stable/configuration/telemetry.html                         \n\n\n\n[11/05/24 23:08:05] INFO     Kedro project onco-derm-ai                                             __init__.py:144\n\n\n\n                    INFO     Defined global variable 'context', 'session', 'catalog' and            __init__.py:145\n                             'pipelines'                                                                           \n\n\n\n[11/05/24 23:08:07] INFO     Registered line magic 'run_viz'                                        __init__.py:151\n\n\n\n\nfrom kedro.io.data_catalog import DataCatalog\n\ncatalog = DataCatalog.from_config(\"../conf/base/catalog.yml\")\n\n\ncatalog.save(\"train_raw\", train_df)\ncatalog.save(\"test_raw\", test_df)\ncatalog.save(\"val_raw\", val_df)\n\n[11/05/24 23:13:11] INFO     Saving data to train_raw (PickleDataset)...                        data_catalog.py:431\n\n\n\n                    INFO     Saving data to test_raw (PickleDataset)...                         data_catalog.py:431\n\n\n\n                    INFO     Saving data to val_raw (PickleDataset)...                          data_catalog.py:431\n\n\n\n\ndf = catalog.load(\"train_raw\")\n\n[11/05/24 23:13:47] INFO     Loading data from train_raw (PickleDataset)...                     data_catalog.py:389\n\n\n\n\ndf[\"image\"][0].shape\n\n\n\n\n\n(28, 28, 3)"
  }
]